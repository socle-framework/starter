package store

import (
	"context"
)

// Store defines all functions to execute db queries and transactions
type Store interface {
	AttachNativeConn(ctx context.Context, addr string, maxConns int, maxConnIdleTime string) error
	GetNativeConn() interface{}
	// For SQLC
	//Querier   //Querier code generated by sqlc
	//Close() error
}

// func ExecTx(db *sql.DB, ctx context.Context, fn func(*Queries) error) error {
// 	tx, err := db.BeginTx(ctx, nil)
// 	if err != nil {
// 		return err
// 	}

// 	q := New(tx)
// 	err = fn(q)
// 	if err != nil {
// 		if rbErr := tx.Rollback(); rbErr != nil {
// 			return fmt.Errorf("tx err: %v, rb err: %v", err, rbErr)
// 		}
// 		return err
// 	}

// 	return tx.Commit()
// }
